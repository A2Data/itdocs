<div id="footer">

    <div>
        <span id="timeDate"></span>
        <i class="fa fa-heartbeat" aria-hidden="true" style="color:rgba(255,0,0,.9)" ></i>
        <span id="times"></span>
        <i class="fa fa-heartbeat" aria-hidden="true" style="color:rgba(255,0,0,.9)" ></i>
        <script>
            var now = new Date();
            function createtime() {
                var grt= new Date("01/26/2021 00:00:00");  //在此处修改你的建站时间，格式：月/日/年 时:分:秒
                now.setTime(now.getTime()+250);
                days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);
                hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);
                if(String(hnum).length ==1 ){hnum = "0" + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);
                mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = "0" + mnum;}
                seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);
                snum = Math.round(seconds); if(String(snum).length ==1 ){snum = "0" + snum;}
                // document.getElementById("timeDate").innerHTML = "本站已运行 "+dnum+" 天 ";
                document.getElementById("times").innerHTML = "本站已运行 "+dnum+" 天 "+ hnum + " 小时 " + mnum + " 分 " + snum + " 秒";
            }
            setInterval("createtime()",250);
        </script>
    </div>
    <div class="pure">
        <script src="https://pv.sohu.com/cityjson?ie=utf-8"></script>
        <script>
            var getOSAndBrowser = function () {
                var os = navigator.platform;
                var userAgent = navigator.userAgent;
                var info = "";
                var tempArray = "";
                if (os.indexOf("Win") > -1) {
                    if (userAgent.indexOf("Windows NT 5.0") > -1) {
                        info += "Win2000"
                    } else if (userAgent.indexOf("Windows NT 5.1") > -1) {
                        info += "WinXP"
                    } else if (userAgent.indexOf("Windows NT 5.2") > -1) {
                        info += "Win2003"
                    }
                    else if (userAgent.indexOf("Windows NT 6.0") > -1) {
                        info += "WindowsVista"
                    } else if (userAgent.indexOf("Windows NT 6.1") > -1 || userAgent.indexOf("Windows 7") > -1) {
                        info += "Win7"
                    } else if (userAgent.indexOf("Windows NT 6.2") > -1 || userAgent.indexOf("Windows 8") > -1) {
                        info += "Win8"
                    }
                    else if (userAgent.indexOf("Windows NT 6.3") > -1 || userAgent.indexOf("Windows 8.1") > -1) {
                        info += "Win8.1"
                    } else if (userAgent.indexOf("Windows NT 10.0") > -1 || userAgent.indexOf("Windows 10") > -1) {
                        info += "Win10"
                    } else {
                        info += "Other"
                    }
                } else if (os.indexOf("Mac") > -1) {
                    info += "Mac"
                } else if (os.indexOf("X11") > -1) {
                    info += "Unix"
                } else if (os.indexOf("Linux") > -1) {
                    info += "Linux"
                } else { info += "Other" } info += "/";
                var isOpera = userAgent.indexOf("Opera") > -1;
                var isIE = userAgent.indexOf("compatible") > -1 && userAgent.indexOf("MSIE") > -1 && !isOpera;
                var isEdge = userAgent.toLowerCase().indexOf("edge") > -1 && !isIE;
                var isIE11 = (userAgent.toLowerCase().indexOf("trident") > -1 && userAgent.indexOf("rv") > -1);
                if (/[Ff]irefox(\/\d+\.\d+)/.test(userAgent)) {
                    tempArray = /([Ff]irefox)\/(\d+\.\d+)/.exec(userAgent);
                    info += tempArray[1] + tempArray[2]
                } else if (isIE) {
                    var version = "";
                    var reIE = new RegExp("MSIE (\\d+\\.\\d+);");
                    reIE.test(userAgent);
                    var fIEVersion = parseFloat(RegExp["$1"]);
                    if (fIEVersion == 7) {
                        version = "IE7"
                    } else if (fIEVersion == 8) {
                        version = "IE8"
                    } else if (fIEVersion == 9) { version = "IE9" } else if (fIEVersion == 10) { version = "IE10" } else { version = "0" } info += version
                } else if (isEdge) { info += "Edge" } else if (isIE11) { info += "IE11" } else if (/[Cc]hrome\/\d+/.test(userAgent)) { tempArray = /([Cc]hrome)\/(\d+)/.exec(userAgent); info += tempArray[1] + tempArray[2] } else if (/[Vv]ersion\/\d+\.\d+\.\d+(\.\d)* *[Ss]afari/.test(userAgent)) { tempArray = /[Vv]ersion\/(\d+\.\d+\.\d+)(\.\d)* *([Ss]afari)/.exec(userAgent); info += tempArray[3] + tempArray[1] } else if (/[Oo]pera.+[Vv]ersion\/\d+\.\d+/.test(userAgent)) { tempArray = /([Oo]pera).+[Vv]ersion\/(\d+)\.\d+/.exec(userAgent); info += tempArray[1] + tempArray[2] } else { info += "unknown" } return info
            };
            document.write("欢迎来自" + returnCitySN["cname"] + "的朋友");
            document.write(" <br> 您的 IP 是:" + returnCitySN["cip"]);
            document.write(",您使用的是:" + getOSAndBrowser());
        </script>
    </div>
<!--    <div class="github-badge">-->
<!--        <a style="color: #fff" rel="license" href="https://www.foreverblog.cn/blog/1579.html" target="_blank" title="[A2Data@十年之约]">-->
<!--            <span class="badge-subject">Forever Blog</span><span class="badge-value bg-lightgrey">十年之约</span></a>-->
<!--    </div>-->
<!--    <div class="github-badge">-->
<!--        <a style="color: #fff" rel="license" href="https://github.com/" target="_blank" title="静态网页托管于 GitHub Pages">-->
<!--            <span class="badge-subject">Hosted</span><span class="badge-value bg-brightgreen">温故</span></a>-->
<!--    </div>-->
<!--    <div class="github-badge">-->
<!--        <a style="color: #fff" rel="license" href="http://beian.miit.gov.cn" target="_blank" title="[sqlsq.cn@备案]">-->
<!--            <span class="badge-subject">京ICP</span><span class="github-badge .bg-lightgrey">备20010978号</span></a>-->
<!--    </div>-->
<!--    <br>-->

    <div class="github-badge">
        <a style="color: #fff" rel="license" href="https://www.a2data.cn/" target="_blank" title="DataScience提供内容创作">
            <span class="badge-subject">Copyright©2021</span><span class="badge-value bg-blueviolet">DataBricks</span></a>
    </div>
<!--    <div class="github-badge">-->
<!--        <a style="color: #fff" rel="license" href="https://www.jsdelivr.com/" target="_blank" title="[DataBricks & DataScience]">-->
<!--            <span class="badge-subject">独家配置</span><span class="badge-value bg-orange">DsDocs</span></a>-->
<!--    </div>-->
    <div class="github-badge">
        <a style="color: #fff" rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" title="本站点采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可">
            <span class="badge-subject"><i class="fa fa-copyright"></i></span><span class="badge-value bg-lightgrey">BY-NC-SA 4.0</span></a>
    </div>
    <div class="github-badge">
        <a style="color: #fff" rel="license" href="https://996.icu/" target="_blank" title="支持 996.ICU">
            <span class="badge-subject">Link</span><span class="badge-value bg-red">996.ICU</span></a>
    </div>
</div>
<script type="text/javascript">
  $(document).ready(function() {
    $('[cui-dialog="open1-1"]').click(function() {
      $('#dialog1-1').toggleClass('toggled');
    });
  });
</script>
<script>
var searchFunc = function(path, search_id, content_id) {
    'use strict'; //使用严格模式
    $.ajax({
        url: path,
        dataType: "xml",
        success: function( xmlResponse ) {
            // 从xml中获取相应的标题等数据
            var datas = $( "entry", xmlResponse ).map(function() {
                return {
                    title: $( "title", this ).text(),
                    content: $("content",this).text(),
                    url: $( "url" , this).text()
                };
            }).get();
            //ID选择器
            var $input = document.getElementById(search_id);
            var $resultContent = document.getElementById(content_id);
            $input.addEventListener('input', function(){
                var str='<ul class=\"search-result-list\">';                
                var keywords = this.value.trim().toLowerCase().split(/[\s\-]+/);
                $resultContent.innerHTML = "";
                if (this.value.trim().length <= 0) {
                    return;
                }
                // 本地搜索主要部分
                datas.forEach(function(data) {
                    var isMatch = true;
                    var content_index = [];
                    var data_title = data.title.trim().toLowerCase();
                    var data_content = data.content.trim().replace(/<[^>]+>/g,"").toLowerCase();
                    var data_url = data.url;
                    var index_title = -1;
                    var index_content = -1;
                    var first_occur = -1;
                    // 只匹配非空文章
                    if(data_title != '' && data_content != '') {
                        keywords.forEach(function(keyword, i) {
                            index_title = data_title.indexOf(keyword);
                            index_content = data_content.indexOf(keyword);
                            if( index_title < 0 && index_content < 0 ){
                                isMatch = false;
                            } else {
                                if (index_content < 0) {
                                    index_content = 0;
                                }
                                if (i == 0) {
                                    first_occur = index_content;
                                }
                            }
                        });
                    }
                    // 返回搜索结果
                    if (isMatch) {
                    //结果标签
                        str += "<li class='search-result-item'><a href='"+ data_url +"' class='search-result-title' target='_blank'>" + data_title +"</a>";
                        var content = data.content.trim().replace(/<[^>]+>/g,"");
                        if (first_occur >= 0) {
                            // 拿出含有搜索字的部分
                            var start = first_occur - 6;
                            var end = first_occur + 6;
                            if(start < 0){
                                start = 0;
                            }
                            if(start == 0){
                                end = 6;
                            }
                            if(end > content.length){
                                end = content.length;
                            }
                            var match_content = content.substr(start, end); 
                            // 列出搜索关键字，定义class加高亮
                            keywords.forEach(function(keyword){
                                var regS = new RegExp(keyword, "gi");
                                match_content = match_content.replace(regS, "<em class=\"search-keyword cui-color-y-red\">" +keyword+ "</em>");
                            })
                            str += "<p class=\"search-result\">" + match_content +"...</p><div class=\"search-line\"> </div>"
                        }
                    }
                })
                $resultContent.innerHTML = str;
            })
        }
    })
};
var path = "<%- url_for('/search.xml') %>";
searchFunc(path, 'local-search-input', 'local-search-result');
</script>
<% if (theme.valine.enable){ %>
<script>
  new Valine({
    el: '#vcomments',
    appId: "<%= theme.valine.AppId %>",
    appKey: "<%= theme.valine.AppKey %>"
  })
</script>
<% } %>

<% if (theme.waline.enable){ %>
<script>
    new Waline({
        el: '#waline',
        path: location.pathname
    });
</script>
<% } %>
</script>
<script>
    $(".toc-link").click(function() {
        $(".toc-link").removeClass("active_b");
        $(this).addClass("active_b");
        $('.toc-collapse').hide(100);
    });
</script>
<script>
    function listennSidebarTOC() {
        const navItems = document.querySelectorAll(".toc li");
        if (!navItems.length) return;
        const sections = [...navItems].map((element) => {
            const link = element.querySelector(".toc-link");
            const target = document.getElementById(
                decodeURI(link.getAttribute("href")).replace("#", "")
            );
            link.addEventListener("click", (event) => {
                event.preventDefault();
                window.scrollTo({
                    top: target.offsetTop,
                    behavior: "smooth"
                });
            });
            return target;
        });

        function activateNavByIndex(target) {
            if (target.classList.contains("active-current")) return;

            document.querySelectorAll(".toc .active").forEach((element) => {
                element.classList.remove("active", "active-current");
            });
            target.classList.add("active", "active-current");
            $('.toc-link').removeClass('active_b');
            let parent = target.parentNode;
            while (!parent.matches(".toc")) {
                if (parent.matches("li")) parent.classList.add("active");
                parent = parent.parentNode;
            }
        }

        function findIndex(entries) {
            let index = 0;
            let entry = entries[index];
            if (entry.boundingClientRect.top > 0) {
                index = sections.indexOf(entry.target);
                return index === 0 ? 0 : index - 1;
            }
            for (; index < entries.length; index++) {
                if (entries[index].boundingClientRect.top <= 0) {
                    entry = entries[index];
                } else {
                    return sections.indexOf(entry.target);
                }
            }
            return sections.indexOf(entry.target);
        }

        function createIntersectionObserver(marginTop) {
            marginTop = Math.floor(marginTop + 10000);
            let intersectionObserver = new IntersectionObserver(
                (entries, observe) => {
                    let scrollHeight = document.documentElement.scrollHeight;
                    if (scrollHeight > marginTop) {
                        observe.disconnect();
                        createIntersectionObserver(scrollHeight);
                        return;
                    }
                    let index = findIndex(entries);
                    activateNavByIndex(navItems[index]);
                },
                {
                    rootMargin: marginTop + "px 0px -100% 0px",
                    threshold: 0,
                }
            );
            sections.forEach((element) => {
                element && intersectionObserver.observe(element);
            });
        }
        createIntersectionObserver(document.documentElement.scrollHeight);
    }

    document.addEventListener("DOMContentLoaded", listennSidebarTOC);
    document.addEventListener("pjax:success", listennSidebarTOC);
</script>

<style>
    .github-badge {
        display:inline-block;
        border-radius:4px;
        text-shadow:none;
        font-size:13px;
        color:#fff;
        line-height:15px;
        background-color:#ABBAC3;
        margin-bottom:5px;
    }
    .github-badge .badge-subject {
        display:inline-block;
        background-color:#4D4D4D;
        padding:4px 4px 4px 6px;
        border-top-left-radius:4px;
        border-bottom-left-radius:4px;
    }
    .github-badge .badge-value {
        display:inline-block;
        padding:4px 6px 4px 4px;
        border-top-right-radius:4px;
        border-bottom-right-radius:4px;
    }
    .github-badge .bg-brightgreen {
        background-color:#4DC820 !important;
    }
    .github-badge .bg-orange {
        background-color:#FFA500 !important;
    }
    .github-badge .bg-yellow {
        background-color:#D8B024 !important;
    }
    .github-badge .bg-blueviolet {
        background-color:#8833D7 !important;
    }
    .github-badge .bg-pink {
        background-color:#F26BAE !important;
    }
    .github-badge .bg-red {
        background-color:#e05d44 !important;
    }
    .github-badge .bg-blue {
        background-color:#007EC6 !important;
    }
    .github-badge .bg-lightgrey {
        background-color:#9F9F9F !important;
    }
    .github-badge .bg-grey, .github-badge .bg-gray {
        background-color:#555 !important;
    }
    .github-badge .bg-lightgrey, .github-badge .bg-lightgray {
        background-color:#9f9f9f !important;
    }
</style>